#  name: fiap_technical_challenge_adj

#volumes:
#  database_hospital:
#    name: database_hospital

networks:
  communication: # conexão com infra-local e acesso a internet - tipo bridge
    name: communication
    driver: bridge

services:

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      # Ativa o modo KRaft (sem Zookeeper)
      - KAFKA_ENABLE_KRAFT=yes # Habilita o modo KRaft (sem Zookeeper)
      - KAFKA_CFG_PROCESS_ROLES=broker,controller # Define os papéis do nó - broker e controller - necessário para KRaft
      - KAFKA_CFG_NODE_ID=1 # ID único do nó no cluster
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093 # Define o votante do controller - necessário para KRaft
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093 # Define os listeners para broker e controller
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 # Endereço que os clientes usarão para se conectar ao broker
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT # Mapeia os protocolos de segurança dos listeners
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER # Define o listener do controller
      - ALLOW_PLAINTEXT_LISTENER=yes # Permite listener sem criptografia
    restart: unless-stopped

#  challenge_hospital:
#    container_name: challenge_hospital
#    image: juniorsmartins/challenge_hospital:v0.0.1
#    build:
#      context: ../
#      dockerfile: Dockerfile
#      args:
#        APP_NAME: "challenge_hospital"
#        APP_VERSION: "v0.0.1"
#        APP_DESCRIPTION: "Serviço de Crud de hospital."
#    ports:
#      - "9050:9050"
#    deploy:
#      resources:
#        limits:
#          cpus: '1.0'
#          memory: 512M
#    environment:
#      - DB_HOST=challenge_database_hospital
#      - DB_NAME=database_hospital
#      - DB_PORT=5432
#    restart: on-failure
#    networks:
#      - communication
#    depends_on:
#      challenge_database_hospital:
#        condition: service_started
#
#  challenge_database_hospital:
#    container_name: challenge_database_hospital
#    image: postgres:16.0
#    ports:
#      - "5501:5432"
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 512M
#    restart: on-failure
#    environment:
#      - POSTGRES_DB=database_hospital
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#    volumes:
#      - database_hospital:/var/lib/postgresql/data
#    networks:
#      - communication


